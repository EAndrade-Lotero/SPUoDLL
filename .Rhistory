acc_external = cumsum(acc_external_)/n()
)
head(df2)
df2 <- df1 %>%
mutate(
acc_internal = cumsum(acc_internal_)/count(),
acc_external = cumsum(acc_external_)/n()
)
df2 <- df1 %>%
mutate(
acc_internal = cumsum(acc_internal_)/count(round),
acc_external = cumsum(acc_external_)/n()
)
df1 <- df %>%
group_by(player,round) %>%
summarize(
acc_internal_ = mean(internal_accu),
acc_external_ = mean(external_accu)
)
# df1$acc_internal = cumsum(df1$acc_internal_)
# df1$acc_external = cumsum(df1$acc_external_)
head(df1)
df2 <- df1 %>%
mutate(
acc_internal = cumsum(acc_internal_)/count(round),
acc_external = cumsum(acc_external_)/n()
)
df1$aux <- 1
# df1$acc_internal = cumsum(df1$acc_internal_)
# df1$acc_external = cumsum(df1$acc_external_)
head(df1)
df2 <- df1 %>%
mutate(
acc_internal = cumsum(acc_internal_)/cumsum(aux),
acc_external = cumsum(acc_external_)/n()
)
head(df2)
df2 <- df1 %>%
mutate(
acc_internal = cumsum(acc_internal_)/cumsum(aux),
acc_external = cumsum(acc_external_)/cumsum(aux)
)
head(df2)
df1$new_use <- lag(df1$queried, 1)
df <- data %>%
filter(stage == 'Game rounds') %>%
filter(treatment == 'paired') %>%
filter(expert_dog == 'False') %>%
select(player,round,queried,accuracy) %>%
mutate(
internal_accu = (1-queried)*accuracy,
external_accu = queried*accuracy
)
head(df)
df1 <- df %>%
group_by(player,round) %>%
summarize(
acc_internal_ = mean(internal_accu),
acc_external_ = mean(external_accu)
)
df1$aux <- 1
df1$new_use <- lag(df1$queried, 1)
df1 <- df %>%
group_by(player,round) %>%
summarize(
queried = mean(queried)
acc_internal_ = mean(internal_accu),
acc_external_ = mean(external_accu)
)
df1$aux <- 1
df1 <- df %>%
group_by(player,round) %>%
summarize(
queried = mean(queried),
acc_internal_ = mean(internal_accu),
acc_external_ = mean(external_accu)
)
df1$aux <- 1
df1$new_use <- lag(df1$queried, 1)
# df1$acc_internal = cumsum(df1$acc_internal_)
# df1$acc_external = cumsum(df1$acc_external_)
head(df1)
df1 <- df %>%
group_by(player,round) %>%
summarize(
queried = mean(queried),
acc_internal_ = mean(internal_accu),
acc_external_ = mean(external_accu)
)
df1$aux <- 1
df1$new_use <- lag(df1$queried, -1)
# df1$acc_internal = cumsum(df1$acc_internal_)
# df1$acc_external = cumsum(df1$acc_external_)
head(df1)
df2 <- df1 %>%
mutate(
acc_internal = cumsum(acc_internal_)/cumsum(aux),
acc_external = cumsum(acc_external_)/cumsum(aux)
)
# df1$acc_internal = cumsum(df1$acc_internal_)
# df1$acc_external = cumsum(df1$acc_external_)
head(df1)
df1$new_use <- lag(df1$queried, -1)
df1$new_use <- lead(df1$queried, 1)
# df1$acc_internal = cumsum(df1$acc_internal_)
# df1$acc_external = cumsum(df1$acc_external_)
head(df1)
df2 <- df1 %>%
mutate(
acc_internal = cumsum(acc_internal_)/cumsum(aux),
acc_external = cumsum(acc_external_)/cumsum(aux)
)
head(df2)
df2 <- df1 %>%
mutate(
acc_internal = cumsum(acc_internal_)/cumsum(aux),
acc_external = cumsum(acc_external_)/cumsum(aux)
) %>%
select(player,round,queried,new_use,acc_internal,acc_external)
head(df2)
df2 <- df1 %>%
mutate(
acc_internal = cumsum(acc_internal_)/cumsum(aux),
acc_external = cumsum(acc_external_)/cumsum(aux)
) %>%
select(player,round,new_use,queried,acc_internal,acc_external)
head(df2)
model = lm(new_use ~ queried + acc_internal + acc_external, data = df2)
summary(model)
df <- data %>%
filter(stage == 'Game rounds') %>%
filter(treatment == 'paired') %>%
filter(expert_dog == 'False') %>%
select(player,round,queried,accuracy) %>%
mutate(
internal_accu = (1-queried)*accuracy,
external_accu = queried*accuracy
)
head(df)
df <- data %>%
filter(stage == 'Game rounds') %>%
filter(treatment == 'paired') %>%
filter(expert_dog == 'False') %>%
select(player,round,queried,accuracy) %>%
mutate(
internal_accu = (1-queried)*accuracy,
external_accu = queried*accuracy
)
df <- data %>%
filter(stage == 'Game rounds') %>%
filter(treatment == 'paired') %>%
filter(expert_dog == 'False') %>%
select(player,round,queried,accuracy,answer_correct) %>%
mutate(
internal_accu = (1-queried)*accuracy,
external_accu = queried*accuracy
)
head(df)
df1 <- df %>%
group_by(player,round) %>%
summarize(
queried = mean(queried),
answer_correct = mean(answer_correct),
acc_internal_ = mean(internal_accu),
acc_external_ = mean(external_accu)
)
df1$aux <- 1
df1$new_use <- lead(df1$queried, 1)
head(df1)
df2 <- df1 %>%
mutate(
acc_internal = cumsum(acc_internal_)/cumsum(aux),
acc_external = cumsum(acc_external_)/cumsum(aux)
) %>%
select(player,round,new_use,queried,acc_internal,acc_external,answer_correct)
head(df2)
df <- data %>%
filter(stage == 'Game rounds') %>%
filter(treatment == 'paired') %>%
filter(expert_dog == 'False') %>%
select(player,round,queried,accuracy) %>%
mutate(
internal_accu = (1-queried)*accuracy,
external_accu = queried*accuracy
)
head(df)
df1 <- df %>%
group_by(player,round) %>%
summarize(
queried = mean(queried),
acc_internal_ = mean(internal_accu),
acc_external_ = mean(external_accu)
)
df1$aux <- 1
df1$new_use <- lead(df1$queried, 1)
head(df1)
df2 <- df1 %>%
mutate(
acc_internal = cumsum(acc_internal_)/cumsum(aux),
acc_external = cumsum(acc_external_)/cumsum(aux)
) %>%
select(player,round,new_use,queried,acc_internal,acc_external)
head(df2)
model = lm(new_use ~ queried + acc_internal + acc_external, data = df2)
summary(model)
par(mfrow = c(2, 2))
plot(model)
###########################################
###########################################
# SELF-REPORT OF UNDERSTANDING
###########################################
###########################################
data = read.csv('rep-understanding.csv')
#############################
# Paired vs. solo EXPERTS
#############################
df <- data %>%
filter(expertise == 'experts') %>%
select(player,accuracy,report) %>%
head(df)
###########################################
###########################################
# SELF-REPORT OF UNDERSTANDING
###########################################
###########################################
data = read.csv('rep-understanding.csv')
#############################
# Paired vs. solo EXPERTS
#############################
df <- data %>%
filter(expertise == 'experts') %>%
select(player,accuracy,report) %>%
head(df)
#############################
# Paired vs. solo EXPERTS
#############################
df <- data %>%
filter(expertise == 'experts')
head(df)
#############################
# Paired vs. solo EXPERTS
#############################
df <- data %>%
filter(expertise == 'experts') %>%
select(player,report) %>%
head(df)
#############################
# Paired vs. solo EXPERTS
#############################
df <- data %>%
filter(expertise == 'experts') %>%
select(player) %>%
head(df)
#############################
# Paired vs. solo EXPERTS
#############################
df <- data %>%
filter(expertise == 'experts') %>%
select(player,accuracy,report)
head(df)
#############################
# Paired vs. solo EXPERTS
#############################
df <- data %>%
filter(expertise == 'experts') %>%
select(player,report,accuracy)
head(df)
#############################
# Paired vs. solo EXPERTS
#############################
df <- data %>%
filter(expertise == 'experts') %>%
select(treatment,player,report,accuracy)
head(df)
describeBy(df$report, df$treatment)
x = df %>% filter(treatment == 'paired')
y = df %>% filter(treatment == 'solo')
t.test(x, y, alternative = "two.sided", var.equal = FALSE)
###########################################
###########################################
# SELF-REPORT OF UNDERSTANDING
###########################################
###########################################
data = read.csv('rep-understanding.csv')
data$report = as.integer(data$report)
#############################
# Paired vs. solo EXPERTS
#############################
df <- data %>%
filter(expertise == 'experts') %>%
select(treatment,player,report,accuracy)
# head(df)
describeBy(df$report, df$treatment)
x = df %>% filter(treatment == 'paired')
y = df %>% filter(treatment == 'solo')
t.test(x, y, alternative = "two.sided", var.equal = FALSE)
x = df %>% filter(treatment == 'paired') %>% select(report)
y = df %>% filter(treatment == 'solo') %>% select(report)
t.test(x, y, alternative = "two.sided", var.equal = FALSE)
wilcox.test(x, y, alternative = "two.sided")
wilcox.test(x, y, alternative = "two.sided")
x = df %>% filter(treatment == 'paired') %>% select(report)
x
x = x.values
x = x.values()
x = x['report']
x
x = df %>% filter(treatment == 'paired') %>% select(report)
x = unlist(x)
x
wilcox.test(x, y, alternative = "two.sided")
x = unlist(df %>% filter(treatment == 'paired') %>% select(report))
y = unlist(df %>% filter(treatment == 'solo') %>% select(report))
t.test(x, y, alternative = "two.sided", var.equal = FALSE)
wilcox.test(x, y, alternative = "two.sided")
#############################
# Paired vs. solo NOVICES
#############################
df <- data %>%
filter(expertise == 'novices') %>%
select(treatment,player,report,accuracy)
# head(df)
describeBy(df$report, df$treatment)
x = unlist(df %>% filter(treatment == 'paired') %>% select(report))
y = unlist(df %>% filter(treatment == 'solo') %>% select(report))
t.test(x, y, alternative = "two.sided", var.equal = FALSE)
wilcox.test(x, y, alternative = "two.sided")
###########################################
###########################################
# SELF-REPORT OF UNDERSTANDING
###########################################
###########################################
data = read.csv('rep-understanding.csv')
data$report = as.integer(data$report)
head(data)
#
df_experts = data %>%
filter(expertise == 'experts') %>%
filter(treatment == 'paired') %>%
select(treatment,player,report,accuracy,player_responded)
head(df_experts)
#
df_experts = data %>%
filter(expertise == 'experts') %>%
filter(treatment == 'paired')
select(treatment,player,report,accuracy,player_responded)
head(df_experts)
x = unlist(df_experts['report'])
x = unlist(df_experts['accuracy'])
cor(x, y, method = c("pearson", "kendall", "spearman"))
x = unlist(df_experts['report'])
y = unlist(df_experts['accuracy'])
cor(x, y, method = c("pearson", "kendall", "spearman"))
cor.test(x, y, method=c("pearson", "kendall", "spearman"))
x = unlist(df_experts['report'])
y = unlist(df_experts['accuracy'])
cor.test(x, y, method=c("pearson", "kendall", "spearman"))
# Correlations
df_experts = data %>%
filter(expertise == 'experts') %>%
filter(treatment == 'solo')
select(treatment,player,report,accuracy,player_responded)
select(treatment,player,report,accuracy)
# Correlations
df_experts = data %>%
filter(expertise == 'experts') %>%
filter(treatment == 'solo')
select(treatment,player,report,accuracy)
###########################################
###########################################
# SELF-REPORT OF UNDERSTANDING
###########################################
###########################################
data = read.csv('rep-understanding.csv')
data$report = as.integer(data$report)
head(data)
# Correlations
df_experts = data %>%
filter(expertise == 'experts') %>%
filter(treatment == 'solo')
# Correlations
df_experts = data %>%
filter(expertise == 'experts') %>%
filter(treatment == 'solo') %>%
select(treatment,player,report,accuracy)
head(df_experts)
x = unlist(df_experts['report'])
y = unlist(df_experts['accuracy'])
cor.test(x, y, method=c("pearson", "kendall", "spearman"))
# Correlations
df_experts = data %>%
filter(expertise == 'experts') %>%
filter(treatment == 'paired') %>%
select(treatment,player,report,accuracy,player_responded)
head(df_experts)
x = unlist(df_experts['report'])
y = unlist(df_experts['accuracy'])
cor.test(x, y, method=c("pearson", "kendall", "spearman"))
# Difference of report means
df = data %>%
filter(expertise == 'experts') %>%
filter(accuracy > .2) %>% # leave out outlier
select(treatment,player,report,accuracy)
# head(df)
describeBy(df$report, df$treatment)
x = unlist(df %>% filter(treatment == 'paired') %>% select(report))
y = unlist(df %>% filter(treatment == 'solo') %>% select(report))
t.test(x, y, alternative = "two.sided", var.equal = FALSE)
wilcox.test(x, y, alternative = "two.sided")
# Correlations
df_experts = data %>%
filter(expertise == 'experts') %>%
filter(treatment == 'paired') %>%
select(treatment,player,report,accuracy,player_responded)
head(df_experts)
x = unlist(df_experts['report'])
y = unlist(df_experts['accuracy'])
cor.test(x, y, method=c("pearson", "kendall", "spearman"))
# Correlations
df_experts = data %>%
filter(expertise == 'experts') %>%
filter(treatment == 'paired') %>%
filter(accuracy > .2) %>% # leave out outlier
select(treatment,player,report,accuracy,player_responded)
head(df_experts)
x = unlist(df_experts['report'])
y = unlist(df_experts['accuracy'])
cor.test(x, y, method=c("pearson", "kendall", "spearman"))
# Difference of report means
df = data %>%
filter(expertise == 'experts') %>%
filter(accuracy > .2) %>% # leave out outlier
select(treatment,player,report,accuracy)
# head(df)
describeBy(df$report, df$treatment)
# Correlations
df_experts = data %>%
filter(expertise == 'experts') %>%
filter(treatment == 'paired') %>%
filter(accuracy > .2) %>% # leave out outlier
select(treatment,player,report,accuracy,player_responded)
head(df_experts)
x = unlist(df_experts['report'])
y = unlist(df_experts['accuracy'])
cor.test(x, y, method=c("pearson", "kendall", "spearman"))
# Correlations
df_experts = data %>%
filter(expertise == 'experts') %>%
filter(treatment == 'solo') %>%
select(treatment,player,report,accuracy)
head(df_experts)
x = unlist(df_experts['report'])
y = unlist(df_experts['accuracy'])
cor.test(x, y, method=c("pearson", "kendall", "spearman"))
x = unlist(df_experts['report'])
y = unlist(df_experts['player_responded'])
cor.test(x, y, method=c("pearson", "kendall", "spearman"))
# Correlations
df_experts = data %>%
filter(expertise == 'experts') %>%
filter(treatment == 'paired') %>%
filter(accuracy > .2) %>% # leave out outlier
select(treatment,player,report,accuracy,player_responded)
head(df_experts)
x = unlist(df_experts['report'])
y = unlist(df_experts['accuracy'])
cor.test(x, y, method=c("pearson", "kendall", "spearman"))
x = unlist(df_experts['report'])
y = unlist(df_experts['player_responded'])
cor.test(x, y, method=c("pearson", "kendall", "spearman"))
#############################
# Paired vs. solo NOVICES
#############################
df <- data %>%
filter(expertise == 'novices') %>%
select(treatment,player,report,accuracy)
# head(df)
describeBy(df$report, df$treatment)
x = unlist(df %>% filter(treatment == 'paired') %>% select(report))
y = unlist(df %>% filter(treatment == 'solo') %>% select(report))
t.test(x, y, alternative = "two.sided", var.equal = FALSE)
y = unlist(df_experts['accuracy'])
wilcox.test(x, y, alternative = "two.sided")
# Correlations
df_novices = data %>%
filter(expertise == 'novices') %>%
filter(treatment == 'solo') %>%
select(treatment,player,report,accuracy)
head(df_novices)
x = unlist(df_novices['report'])
y = unlist(df_novices['accuracy'])
cor.test(x, y, method=c("pearson", "kendall", "spearman"))
# Correlations PAIRED
df_novices = data %>%
filter(expertise == 'novices') %>%
filter(treatment == 'paired') %>%
select(treatment,player,report,accuracy)
head(df_novices)
x = unlist(df_novices['report'])
y = unlist(df_novices['accuracy'])
cor.test(x, y, method=c("pearson", "kendall", "spearman"))
# Correlations PAIRED
df_novices = data %>%
filter(expertise == 'novices') %>%
filter(treatment == 'paired') %>%
select(treatment,player,report,accuracy,answered)
head(df_novices)
x = unlist(df_novices['report'])
y = unlist(df_novices['accuracy'])
cor.test(x, y, method=c("pearson", "kendall", "spearman"))
y = unlist(df_novices['answered'])
cor.test(x, y, method=c("pearson", "kendall", "spearman"))
