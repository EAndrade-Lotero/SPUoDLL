head(data)
df_solo <- data %>%
filter(stage == 'Game rounds') %>%
filter(treatment == 'solo') %>%
select(player, round, accuracy)
head(df_solo)
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(treatment == 'paired') %>%
select(player, round, accuracy, queried)
head(df_solo)
head(df_pair)
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(treatment == 'paired') %>%
#  filter(queried == 1) %>%
select(player, round, accuracy)
df_pair$queried
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(treatment == 'paired') %>%
#  filter(queried == 1) %>%
select(player, round, accuracy, queried)
head(df_pair)
df_pair$queried
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(treatment == 'paired') %>%
filter(queried == 1) %>%
select(player, round, accuracy)
head(df_pair)
df <- rbind(df_solo, df_pair)
df_solo <- data %>%
filter(stage == 'Game rounds') %>%
filter(treatment == 'solo') %>%
select(treatment, player, round, accuracy)
head(df_solo)
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(treatment == 'paired') %>%
filter(queried == 1) %>%
select(treatment, player, round, accuracy)
head(df_pair)
df <- rbind(df_solo, df_pair)
df_solo <- data %>%
filter(stage == 'Game rounds') %>%
filter(treatment == 'solo') %>%
select(treatment, player, round, accuracy)
head(df_solo)
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(treatment == 'paired') %>%
filter(queried == 1) %>%
select(treatment, player, round, accuracy)
head(df_pair)
df <- rbind(df_solo, df_pair)
p <- ggplot(data=df, aes(x=treatment, y=accuracy)) +
geom_bar(stat="identity")
p
p <- ggplot(data=df, aes(x=treatment, y=accuracy)) +
geom_bar()
p
p <- ggplot(data=df, aes(x=treatment, y=accuracy)) +
geom_bar(stat="prop")
df <- df %>%
group_by(treatment) %>%
summarize(
percentage = sum(accuracy) / len(accuracy)
)
df <- df %>%
group_by(treatment) %>%
summarize(
percentage = sum(accuracy) / n
)
df <- df %>%
group_by(treatment) %>%
summarize(
percentage = count(accuracy) / n()
)
df <- df %>%
group_by(treatment) %>%
summarise(count = n()) %>%
mutate(perc = count/sum(count))
head(df)
dat_count <- ddply(ft, .(degree, satjob), 'count')
library(plyr)
dat_count <- ddply(ft, .(degree, satjob), 'count')
dat_count <- ddply(df, .(degree, satjob), 'count')
dat_count <- ddply(df, .(treatment, accuracy), 'count')
table(df$accuracy)
df <- rbind(df_solo, df_pair)
table(df$accuracy)
table(df$accuracy, df$treatment)
library(gmodels)
install.packages("gmodels")
library(gmodels)
CrossTable(df$accuracy, df$treatment)
CrossTable(df$accuracy, df$treatment,
prop.r=FALSE, prop.c=FALSE, prop.t=TRUE)
CrossTable(df$accuracy, df$treatment,
prop.r=FALSE, prop.c=FALSE, prop.t=TRUE,
prop.chisq=FALSE, chisq = FALSE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,)
CrossTable(df$accuracy, df$treatment,
prop.r=FALSE, prop.c=TRUE, prop.t=FALSE,
prop.chisq=FALSE, chisq = FALSE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,)
CrossTable(df$accuracy, df$treatment,
prop.r=FALSE, prop.c=TRUE, prop.t=FALSE,
prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,)
df_solo <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'solo') %>%
select(treatment, player, round, accuracy)
head(df_solo)
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'paired') %>%
filter(queried == 1) %>%
select(treatment, player, round, accuracy)
head(df_pair)
df <- rbind(df_solo, df_pair)
CrossTable(df$accuracy, df$treatment,
prop.r=FALSE, prop.c=TRUE, prop.t=FALSE,
prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,)
quarts <- to_vec(for(i in q) quantile(df_pair$queried, i)[[1]])
quarts
q <- list(.25,1)
quarts <- to_vec(for(i in q) quantile(df_pair$queried, i)[[1]])
quarts
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'paired') %>%
filter(queried == 1) %>%
select(treatment, player, round, accuracy)
head(df_pair)
q <- list(.25,1)
q
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'paired') %>%
filter(queried == 1) %>%
select(treatment, player, round, accuracy,queried)
head(df_pair)
q <- list(.25,1)
quarts <- to_vec(for(i in q) quantile(df_pair$queried, i)[[1]])
quarts
df_aux <- df_pair %>%
group_by(player) %>%
summarise(
queried = mean(queried)
)
head(df_aux)
df_aux <- df_pair %>%
group_by(player) %>%
summarise(
queried = mean(queried)
)
head(df_aux)
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'paired') %>%
filter(queried == 1) %>%
select(treatment, player, round, accuracy,queried)
head(df_pair)
df_aux <- df_pair %>%
group_by(player) %>%
summarise(
query = mean(queried)
)
head(df_aux)
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'paired') %>%
filter(queried == 1) %>%
select(treatment, player, round, accuracy,queried)
head(df_pair)
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'paired') %>%
select(treatment, player, round, accuracy,queried)
head(df_pair)
df_aux <- df_pair %>%
group_by(player) %>%
summarise(
query = mean(queried)
)
head(df_aux)
df_aux <- df_pair %>%
group_by(player) %>%
summarize(
query = mean(queried)
)
head(df_aux)
df_aux <- df_pair %>%
group_by(player) %>%
summarize(
m = mean(queried)
)
head(df_aux)
df_pair$player
unique(df_pair$player)
df_aux <- df_pair %>%
group_by(player) %>%
summarize(
player = unique(player),
m = mean(queried)
)
df_aux <- df_pair %>%
group_by(player) %>%
mutate(
m = mean(queried)
)
head(df_aux)
df_aux <- df_pair %>%
mutate(
m = mean(queried)
)
head(df_aux)
df_aux <- df_pair %>%
group_by(player) %>%
mutate(
m = mean(queried)
)
head(df_aux)
df_pair %>%
group_by(player) %>%
mutate(
m = mean(queried)
)
df_pair %>%
group_by(player) %>%
summarize(
m = mean(queried)
)
df_pair %>%
group_by(treatment) %>%
summarize(
m = mean(queried)
)
# library(lme4)
library(psych)
library(dplyr)
library(nlme)
library(tidyverse) # data wrangling and visualization
library(sjPlot)    # to visualizing mixed-effects models
library(effects)   # to visualizing mixed-effects models
library(lmerTest)  # p-values for MEMs based on the Satterthwaite approximation
library(report)    # mainly for an "report" function
library(emmeans)   # post-hoc analysis
library(knitr)     # beautifying tables
library(sjstats)   # ICC - intraclass-correlation coefficient
library(caret)     # ML, model comparison & utility functions
library(ggplot2)
library(lawstat)
library(comprehenr)
###########################################
###########################################
# PERFORMANCES
###########################################
###########################################
data = read.csv('performances.csv')
data$treatment = as.factor(data$treatment)
data$queried = as.integer(data$queried)
fun <- function(x) {
if (is.na(x)) {return(0)}
else if (x==0) {return(0)}
else {return(1)}
}
data$queried = unlist(lapply(data$queried, FUN = fun))
df_solo <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'solo') %>%
select(treatment, player, round, accuracy)
head(df_solo)
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'paired') %>%
select(treatment, player, round, accuracy,queried)
head(df_pair)
df_aux <- df_pair %>%
group_by(player) %>%
summarize(
m = mean(queried)
)
head(df_aux)
df_aux <- df_pair %>%
group_by(player) %>%
summarize(
queried = mean(queried)
)
head(df_aux)
q <- list(.25,1)
quarts <- to_vec(for(i in q) quantile(df_aux$queried, i)[[1]])
quarts <- c(0,quarts)
quarts
df_novices = df_pair %>%
mutate(Group = cut(
queried,
breaks = quarts,
labels = c('very low', 'normal'),
include.lowest = TRUE
))
describeBy(df_novices$accuracy, df_novices$Group)
df_novices
df_aux <- df_pair %>%
group_by(player) %>%
mutate(
queried = mean(queried)
)
head(df_aux)
df_pair <- df_pair %>%
group_by(player) %>%
mutate(
queried = mean(queried)
)
head(df_aux)
head(df_pair)
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'paired') %>%
select(treatment, player, round, accuracy,queried)
head(df_pair)
df_pair <- df_pair %>%
group_by(player) %>%
mutate(
m_queried = mean(queried)
)
head(df_pair)
q <- list(.25,1)
quarts <- to_vec(for(i in q) quantile(df_aux$m_queried, i)[[1]])
quarts <- to_vec(for(i in q) quantile(df_pair$m_queried, i)[[1]])
quarts <- c(0,quarts)
quarts
df_novices = df_pair %>%
mutate(Group = cut(
m_queried,
breaks = quarts,
labels = c('very low', 'normal'),
include.lowest = TRUE
))
describeBy(df_novices$accuracy, df_novices$Group)
q <- list(.25,.5,.75,1)
quarts <- to_vec(for(i in q) quantile(df_pair$m_queried, i)[[1]])
quarts <- c(0,quarts)
quarts
df_novices = df_pair %>%
mutate(Group = cut(
m_queried,
breaks = quarts,
# labels = c('very low', 'normal'),
labels = c('very low', 'low', 'mid', 'high'),
include.lowest = TRUE
))
describeBy(df_novices$accuracy, df_novices$Group)
df_pair <- df_pair %>%
group_by(player) %>%
mutate(
m_queried = mean(queried)
)
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'paired') %>%
select(treatment, player, round, accuracy,queried)
head(df_pair)
df_pair <- df_pair %>%
group_by(player) %>%
mutate(
m_queried = mean(queried)
)
head(df_pair)
q <- list(.25,.5,.75,1)
quarts <- to_vec(for(i in q) quantile(df_pair$m_queried, i)[[1]])
quarts <- c(0,quarts)
quarts
df_novices = df_pair %>%
mutate(Group = cut(
m_queried,
breaks = quarts,
# labels = c('very low', 'normal'),
labels = c('very low', 'low', 'mid', 'high'),
include.lowest = TRUE
)) %>%
filter(queried == 0)
describeBy(df_novices$accuracy, df_novices$Group)
q <- list(.5,1)
quarts <- to_vec(for(i in q) quantile(df_pair$m_queried, i)[[1]])
quarts <- c(0,quarts)
quarts
df_novices = df_pair %>%
mutate(Group = cut(
m_queried,
breaks = quarts,
# labels = c('very low', 'normal'),
labels = c('very low', 'low', 'mid', 'high'),
include.lowest = TRUE
)) %>%
filter(queried == 0)
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'paired') %>%
select(treatment, player, round, accuracy,queried)
head(df_pair)
df_pair <- df_pair %>%
group_by(player) %>%
mutate(
m_queried = mean(queried)
)
head(df_pair)
q <- list(.5,1)
quarts <- to_vec(for(i in q) quantile(df_pair$m_queried, i)[[1]])
quarts <- c(0,quarts)
quarts
df_novices = df_pair %>%
mutate(Group = cut(
m_queried,
breaks = quarts,
# labels = c('very low', 'normal'),
labels = c('very low', 'low', 'mid', 'high'),
include.lowest = TRUE
)) %>%
filter(queried == 0)
describeBy(df_novices$accuracy, df_novices$Group)
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'paired') %>%
select(treatment, player, round, accuracy,queried)
head(df_pair)
df_pair <- df_pair %>%
group_by(player) %>%
mutate(
m_queried = mean(queried)
)
head(df_pair)
q <- list(.5,1)
quarts <- to_vec(for(i in q) quantile(df_pair$m_queried, i)[[1]])
quarts <- c(0,quarts)
quarts
df_novices = df_pair %>%
mutate(Group = cut(
m_queried,
breaks = quarts,
labels = c('very low', 'normal'),
#    labels = c('very low', 'low', 'mid', 'high'),
include.lowest = TRUE
)) %>%
filter(queried == 0)
describeBy(df_novices$accuracy, df_novices$Group)
CrossTable(df_novices$accuracy, df_novices$Group,
prop.r=FALSE, prop.c=TRUE, prop.t=FALSE,
prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,)
library(gmodels)
s
CrossTable(df_novices$accuracy, df_novices$Group,
prop.r=FALSE, prop.c=TRUE, prop.t=FALSE,
prop.chisq=FALSE, chisq = TRUE, fisher=FALSE, mcnemar=FALSE,
resid=FALSE, sresid=FALSE, asresid=FALSE,
missing.include=FALSE,)
df_solo <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'solo') %>%
select(treatment, player, round, accuracy)
head(df_solo)
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'paired') %>%
select(treatment, player, round, accuracy, queried)
head(df_pair)
df_solo <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'solo') %>%
select(treatment, player, round, accuracy)
head(df_solo)
df_pair <- data %>%
filter(stage == 'Game rounds') %>%
filter(expert_dog == 'False') %>%
filter(treatment == 'paired') %>%
filter(queried == 0) %>%
select(treatment, player, round, accuracy)
head(df_pair)
df <- rbind(df_solo, df_pair)
head(df)
model = glmer(
'accuracy ~ treatment + (treatment|round)',
data = df,
family = binomial
)
summary(model)
